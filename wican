#!/usr/bin/env bash

set -x

can_bitrate_to_command() {
  case $1 in
    10000) echo 0;;
    20000) echo 1;;
    50000) echo 2;;
    100000) echo 3;;
    125000) echo 4;;
    250000) echo 5;;
    500000) echo 6;;
    800000) echo 7;;
    1000000) echo 8;;
    *) echo "Invalid bitrate ${1}" >&2; echo 8;;
  esac
}

setup_tcp_connection() {
  local id=$1
  local ip_addr=$2

  socat pty,link=/dev/wican${id},raw tcp:${ip_addr}:3333 1>/dev/null &
  return $!
}

tcp_to_can() {
  local id=$1
  local ip_addr=$2
  local bitrate=$3
  local bitrate_command=$( can_bitrate_to_command $bitrate )

  setup_tcp_connection ${id} ${ip_addr}
  local socat_pid=$!
  sleep 1
  slcand -F -o -s${bitrate_command} /dev/wican${id} can${id} 1>/dev/null &
  local slcand_pid=$!
  sleep 1
  ip link set can${id} up
  report_connection_ok ${id}
  wait ${socat_pid} ${slcand_pid}
}

acm_to_can() {
  local id=$1
  local acm_device=$2
  local bitrate=$3
  local bitrate_command=$( can_bitrate_to_command $bitrate )

  slcand -F -o -s${bitrate_command} -t sw -S 4000000 ${acm_device} can${id} 1>/dev/null &
  local slcand_pid=$!
  sleep 1
  ip link set can${id} up
  report_connection_ok ${id}
  wait ${slcand_pid}
}

report_connection_ok() {
  local id=$1

  echo "Ready"
  echo "Try this command: candump can$id"
  echo "CTRL+C to exit"
}

help() {
  echo "$0 tcp <id> <ip_addr> <bitrate>"
  echo "$0 acm <id> <device> <bitrate>"
  echo "example: $0 tcp 0 192.168.80.1 250000"
  echo "example: $0 acm 0 /dev/ttyACM0 250000"
}

main() {
  if [ -z "${3}" ]; then
    help
    exit 1
  fi

  # Ensure all commands are executed as root
  if [ ${USER} != "root" ]; then
    sudo $0 $@
    exit
  fi

  local bitrate=$4

  if [ -z "${bitrate}" ]; then
    echo "Bitrate not specified, using default: 1000000" >&2
    bitrate=1000000
  fi

  case $1 in
    tcp) tcp_to_can $2 $3 $bitrate;;
    acm) acm_to_can $2 $3 $bitrate;;
    *) help; exit 1;;
  esac

  # TODO
  sudo killall -9 socat
  sudo killall -9 slcand
}

main $@
